snippet class
    final class ${1} {
        ${0:TARGET}
    }

snippet lo
    List.of(${1});${0:TARGET}

snippet so
    Set.of(${1});${0:TARGET}

snippet mo
    Map.of(${1});${0:TARGET}

snippet interface
    interface ${1} {
        ${0:TARGET}
    }

snippet method
    ${1:void} ${2:#:method}(${3}) ${4:throws} {
        ${0:TARGET}
    }

snippet enum
abbr enum {}
    enum ${1:#:name} {
        ${0:TARGET}
    }

snippet var
    final ${1:#:type} ${2:#:var}${3};

snippet v
    final var ${1:#:var}${2};

snippet const
    static public final ${1:#:type} ${2:#:var} = ${3};${4}

snippet const_string
    static public final String ${1:var} = "${2}";${4}

snippet final
    public final ${1:#:type} ${2:#:var} = ${3};

snippet assert
    assert ${1:#:test} : ${2:#:Failure message};${3}

snippet if
    if (${1}) {
        ${2:TARGET}
    }

snippet else
    else {
        ${1:TARGET}
    }

snippet elif
alias elseif
    else if (${1}) {
        ${2:TARGET}
    }

snippet while
    while (${1}) {
        ${2:TARGET}
    }

snippet for
    for (${1}; ${2}; ${3}) {
        ${4:TARGET}
    }

snippet foreach
alias   fore
    for (${1} : ${2}) {
        ${3:TARGET}
    }

snippet switch
    switch (${1}) {
        ${2:TARGET}
    }

snippet case
    case ${1}:
        ${2:TARGET}
    ${0}

snippet br
    break;

snippet default
alias   de
    default:
        ${0}

snippet try
    try {
        ${0:TARGET}
    } catch (${1:Exception} ${2:e}) {
        ${3:e.printStackTrace();}
    }

snippet tr
    try (${1:#:Resources}) {
        ${0:TARGET}
    } catch (${2:Exception} ${3:e}) {
        ${4:e.printStackTrace();}
    }

snippet tf
    try {
        ${0:TARGET}
    } catch (${1:Exception} ${2:e}) {
        ${3:e.printStackTrace();}
    } finally {
        ${4}
    }

snippet cat
    catch (${1:Exception} ${2:e}) {
        ${0:e.printStackTrace();}
    }

snippet fin
    finally {
        ${0:TARGET}
    }

snippet th
options word
    throw ${0}

snippet sy
options word
    synchronized

snippet im
alias   imt
    import ${1};
    ${0}

snippet ju
    java.util.*

snippet ji
    java.io.*

snippet jn
    java.net.*

snippet jm
    java.math.*

snippet jus
    java.util.stream.*

snippet main
    final class `expand('%:p:t:r')` {
        public static void main(final String args[]) {
            ${0:#:body}
        }
    }


snippet pl
options word
    System.out.println(${1});
